image: base/devel

stages:
  - sync
  - build
  - test

# Templates with reasonable defaults for builds and tests
.variables_template: &default_variables
  C_COMPILER: gcc
  CXX_COMPILER: g++
  BUILD_TYPE: Debug
  BUILD_REFERENCE: "ON"
  BUILD_CPU: "SOFF"
  BUILD_GPU: "OFF"
  EXTRA_CMAKE_FLAGS: ""
  EXTRA_PACKAGES: ""

.before_script_template: &default_before_script
  - pacman-db-upgrade
  - pacman --noconfirm -Syu cmake git python ${EXTRA_PACKAGES}

.build_template: &default_build
  stage: build
  variables: *default_variables
  before_script: *default_before_script
  script:
    - mkdir -p ${CI_JOB_NAME} && cd ${CI_JOB_NAME}
    - cmake ${CI_PROJECT_DIR}
        -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_COMPILER=${CXX_COMPILER}
        -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DBUILD_SHARED_LIBS=ON
        ${EXTRA_CMAKE_FLAGS} -DDEVEL_TOOLS=OFF
        -DBUILD_REFERENCE=${BUILD_REFERENCE} -DBUILD_CPU=${BUILD_CPU}
        -DBUILD_GPU=${BUILD_GPU} -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON
    - make -j$(grep "core id" /proc/cpuinfo | sort -u | wc -l)
  artifacts:
    paths:
      - build/

.test_template: &default_test
  stage: test
  before_script: *default_before_script
  script:
    - cd ${CI_JOB_NAME/test/build}
    - make test

sync:
  stage: sync
  variables:
    GIT_STRATEGY: none
    PRIVATE_REPO: git@gitlab.com:ginkgo-bot/test.git
    PUBLIC_REPO: git@github.com:ginkgo-bot/test.git
  before_script:
    - pacman-db-upgrade
    - pacman --noconfirm -Syu openssh git
    - eval $(ssh-agent -s)
    - echo "${BOT_KEY}" | tr -d '\r' | ssh-add - >/dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.com github.com >>~/.ssh/known_hosts
    - git config --global user.name "${BOT_USER}"
    - git config --global user.emal "${BOT_EMAIL}"
  script:
    - git clone ${PRIVATE_REPO} -b ${CI_COMMIT_REF_NAME} repo_sync
    - cd repo_sync
    - git pull --ff-only ${PUBLIC_REPO} ${CI_COMMIT_REF_NAME}
    - git push ${PRIVATE_REPO} ${CI_COMMIT_REF_NAME}
    - git push ${PUBLIC_REPO} ${CI_COMMIT_REF_NAME}
  only:
    - master
    - develop

# Build jobs
# build/gcc/reference/debug:
#   <<: *default_build
# 
# build/clang/reference/debug:
#   <<: *default_build
#   variables:
#     <<: *default_variables
#     C_COMPILER: clang
#     CXX_COMPILER: clang++
#     EXTRA_PACKAGES: clang
# 
# build/gcc/all/debug:
#   <<: *default_build
#   variables:
#     <<: *default_variables
#     EXTRA_PACKAGES: cuda
#     BUILD_CPU: "ON"
#     BUILD_GPU: "ON"
#     EXTRA_CMAKE_FLAGS: &cuda_flags
#       -DCMAKE_CUDA_COMPILER=/opt/cuda/bin/nvcc -DCUDA_ARCH_OPTION=60
# 
# build/clang/all/debug:
#   <<: *default_build
#   variables:
#     <<: *default_variables
#     EXTRA_PACKAGES: clang cuda
#     C_COMPILER: clang
#     CXX_COMPILER: clang++
#     BUILD_CPU: "ON"
#     BUILD_GPU: "ON"
#     EXTRA_CMAKE_FLAGS: *cuda_flags
# 
# # Test jobs
# test/gcc/reference/debug:
#   <<: *default_test
#   dependencies:
#     - build/gcc/reference/debug
# 
# test/clang/reference/debug:
#   <<: *default_test
#   dependencies:
#     - build/clang/reference/debug
